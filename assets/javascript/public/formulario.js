/**
 * SINDPPENAL - Sistema de Permuta√ß√£o
 * Formul√°rio Principal - JavaScript
 */

// Fun√ß√£o para remover acentos (normaliza√ß√£o)
function removerAcentos(str) {
    if (!str) return '';
    const acentos = {
        '√°': 'a', '√†': 'a', '√£': 'a', '√¢': 'a', '√§': 'a',
        '√©': 'e', '√®': 'e', '√™': 'e', '√´': 'e',
        '√≠': 'i', '√¨': 'i', '√Æ': 'i', '√Ø': 'i',
        '√≥': 'o', '√≤': 'o', '√µ': 'o', '√¥': 'o', '√∂': 'o',
        '√∫': 'u', '√π': 'u', '√ª': 'u', '√º': 'u',
        '√ß': 'c', '√±': 'n',
        '√Å': 'A', '√Ä': 'A', '√É': 'A', '√Ç': 'A', '√Ñ': 'A',
        '√â': 'E', '√à': 'E', '√ä': 'E', '√ã': 'E',
        '√ç': 'I', '√å': 'I', '√é': 'I', '√è': 'I',
        '√ì': 'O', '√í': 'O', '√ï': 'O', '√î': 'O', '√ñ': 'O',
        '√ö': 'U', '√ô': 'U', '√õ': 'U', '√ú': 'U',
        '√á': 'C', '√ë': 'N'
    };
    
    return str.split('').map(char => acentos[char] || char).join('');
}

$(document).ready(function() {
    // Verificar depend√™ncias
    if (typeof jQuery === 'undefined') {
        console.error('jQuery n√£o encontrado');
        return;
    }
    
    if (typeof $.fn.select2 === 'undefined') {
        console.error('Select2 n√£o encontrado');
        return;
    }
    
    // Verificar se os elementos existem
    if ($('#origem').length === 0) {
        console.error('Elemento #origem n√£o encontrado');
        return;
    }
    
    if ($('#destino').length === 0) {
        console.error('Elemento #destino n√£o encontrado');
        return;
    }
    
    // Configurar Select2 para origem (sele√ß√£o √∫nica)
    $('#origem').select2({
        placeholder: "Selecione sua unidade atual",
        allowClear: true,
        width: '100%',
        minimumInputLength: 0,
        ajax: {
            url: './api/api_unidades.php',
            dataType: 'json',
            delay: 250,
            cache: true,
            data: function (params) {
                // Normalizar termo de busca para ignorar acentos
                const termNormalizado = params.term ? removerAcentos(params.term.toLowerCase()) : '';
                return {
                    q: termNormalizado,
                    page: params.page || 1
                };
            },
            processResults: function (data) {
                return {
                    results: data
                };
            }
        },
        language: {
            noResults: function() {
                return "Nenhuma unidade encontrada";
            },
            searching: function() {
                return "Buscando...";
            }
        }
    });

    $('#destino').select2({
        placeholder: "Selecione os destinos desejados",
        allowClear: true,
        width: '100%',
        minimumInputLength: 0,
        maximumSelectionLength: 3,
        ajax: {
            url: './api/api_unidades.php',
            dataType: 'json',
            delay: 250,
            cache: true,
            data: function (params) {
                // Normalizar termo de busca para ignorar acentos
                const termNormalizado = params.term ? removerAcentos(params.term.toLowerCase()) : '';
                return {
                    q: termNormalizado,
                    page: params.page || 1
                };
            },
            processResults: function (data) {
                return {
                    results: data
                };
            }
        },
        language: {
            noResults: function() {
                return "Nenhuma unidade encontrada";
            },
            searching: function() {
                return "Buscando...";
            },
            maximumSelected: function() {
                return "Voc√™ pode selecionar no m√°ximo 3 destinos";
            }
        }
    });

    // M√°scara para telefone - m√°ximo 11 d√≠gitos
    $('#telefone').on('input', function() {
        let value = this.value.replace(/\D/g, ''); // Remove tudo que n√£o √© d√≠gito
        
        // Limita a 11 d√≠gitos
        if (value.length > 11) {
            value = value.substring(0, 11);
        }
        
        // Aplica a m√°scara baseado na quantidade de d√≠gitos
        if (value.length <= 10) {
            // Telefone fixo: (11) 1234-5678
            value = value.replace(/(\d{2})(\d{4})(\d{4})/, '($1) $2-$3');
        } else {
            // Celular: (11) 91234-5678
            value = value.replace(/(\d{2})(\d{5})(\d{4})/, '($1) $2-$3');
        }
        
        this.value = value;
    });

    // Valida√ß√£o adicional no blur para garantir formato correto
    $('#telefone').on('blur', function() {
        const value = this.value.replace(/\D/g, '');
        if (value.length < 10) {
            this.setCustomValidity('Telefone deve ter pelo menos 10 d√≠gitos');
        } else {
            this.setCustomValidity('');
        }
    });

    // Auto-hide mensagens ap√≥s 5 segundos
    setTimeout(function() {
        $('.mensagem').fadeOut(800);
    }, 5000);

    // Processamento do formul√°rio para m√∫ltiplas sele√ß√µes
    $('#formPermuta').on('submit', function(e) {
        console.log('Formul√°rio sendo enviado...');
        
        // Verificar se o formul√°rio √© v√°lido primeiro
        if (!this.checkValidity()) {
            console.log('Formul√°rio inv√°lido, n√£o mostrando alert');
            return true; // Deixa a valida√ß√£o nativa do browser funcionar
        }
        
        console.log('Formul√°rio v√°lido, mostrando alert');
        
        // Se chegou aqui, o formul√°rio √© v√°lido
        // Converter m√∫ltiplas sele√ß√µes em string para o PHP
        const destinoSelect = $('#destino');
        const destinoValues = destinoSelect.val();
        
        if (destinoValues && destinoValues.length > 0) {
            // Criar input hidden com valores concatenados
            const destinoHidden = $('<input>').attr({
                type: 'hidden',
                name: 'destino',
                value: destinoValues.join(', ')
            });
            
            // Remover name do select para n√£o enviar array
            destinoSelect.removeAttr('name');
            
            // Adicionar input hidden ao form
            $(this).append(destinoHidden);
        }
        
        // Exibir alert de sucesso
        alert('Formul√°rio enviado com sucesso! üéâ');
        
        return true;
    });
});
